name: Scan docker image
permissions: read-all

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  docker-image-security-scan:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3.3.0

      - name: ☁️ Download latest image
        run: docker pull postgres:14

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "postgres:14"
          format: "json"
          vuln-type: "os,library"
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
          output: "docker-security-scan.json.tmp"

      - name: Keep only the results section
        id: update
        run: |
          if [ -f docker-security-scan.json ]; then
            cp docker-security-scan.json docker-security-scan.json.old
            #BEFORE="$(jq '.[].Vulnerabilities|length' < docker-security-scan.json)"
            jq '(.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | select(.Layer != null or .LastModifiedDate != null) ) |= del(.Layer, .LastModifiedDate) | .Results' docker-security-scan.json.tmp > docker-security-scan.json
            rm -f docker-security-scan.json.tmp
            #AFTER="$(jq '.[].Vulnerabilities|length' < docker-security-scan.json| head -1)"
            if cmp docker-security-scan.json docker-security-scan.json.old ; then
              echo "labels=new CVE" >> "$GITHUB_OUTPUT"
            else 
              echo "labels=No new CVE" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "first run docker-security-scan.json does not exist. create one!"
            jq '(.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | select(.Layer != null or .LastModifiedDate != null) ) |= del(.Layer, .LastModifiedDate) | .Results' docker-security-scan.json.tmp > docker-security-scan.json
          fi
      - name: Create the Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          author: mergify-ci-bot <mergify-ci-bot@users.noreply.github.com>
          title: "chore(docker): image security scanning report"
          labels: ${{ steps.update.outputs.labels }}
          body: >
            This is the docker image security scanning report
          branch: trivy/daily-report
          base: main
